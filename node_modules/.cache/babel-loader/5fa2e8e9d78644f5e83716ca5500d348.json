{"ast":null,"code":"var _jsxFileName = \"E:\\\\maxim\\\\Study\\\\Learnings\\\\AppleStore\\\\apple-store-app\\\\src\\\\components\\\\cart-block\\\\cart-block.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { AiOutlineShoppingCart } from 'react-icons/ai';\nimport { CartMenu } from '../cart-menu/cart-menu.js';\nimport { ItemsInCart } from '../items-in-cart/items-in-cart.js';\nimport { calcTotalPrice } from '../utils.js';\nimport './cart-block.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartBlock = () => {\n  _s();\n\n  const [isCartMenuVisible, setCartMenuVisible] = useState(false);\n  const items = useSelector(state => state.cart.itemsInCart);\n  const totalPrice = calcTotalPrice(items);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-cart-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(ItemsInCart, {\n      quantity: items.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AiOutlineShoppingCart, {\n      className: \"header-cart\",\n      onClick: () => setCartMenuVisible(!isCartMenuVisible)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), totalPrice > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"total_price\",\n      children: [\" \", totalPrice, \" $\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 28\n    }, this) : null, isCartMenuVisible && /*#__PURE__*/_jsxDEV(CartMenu, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartBlock, \"+bp/AkK0HxGbzQ+iGJGGnEfNGH8=\", false, function () {\n  return [useSelector];\n});\n\n_c = CartBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartBlock\");","map":{"version":3,"sources":["E:/maxim/Study/Learnings/AppleStore/apple-store-app/src/components/cart-block/cart-block.js"],"names":["React","useState","useSelector","AiOutlineShoppingCart","CartMenu","ItemsInCart","calcTotalPrice","CartBlock","isCartMenuVisible","setCartMenuVisible","items","state","cart","itemsInCart","totalPrice","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAO,kBAAP;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,iBAAD,EAAoBC,kBAApB,IAA0CR,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAMS,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,WAArB,CAAzB;AACA,QAAMC,UAAU,GAAGR,cAAc,CAACI,KAAD,CAAjC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAGA,KAAK,CAACK;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,qBAAD;AAAuB,MAAA,SAAS,EAAC,aAAjC;AAA+C,MAAA,OAAO,EAAI,MAAMN,kBAAkB,CAAC,CAACD,iBAAF;AAAlF;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGMM,UAAU,GAAG,CAAb,gBAAiB;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,sBAAiCA,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB,GAAyE,IAH/E,EAIMN,iBAAiB,iBAAI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAGE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAZM;;GAAMH,S;UAEGL,W;;;KAFHK,S","sourcesContent":["import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AiOutlineShoppingCart } from 'react-icons/ai'\r\nimport { CartMenu } from '../cart-menu/cart-menu.js'\r\nimport { ItemsInCart } from '../items-in-cart/items-in-cart.js'\r\nimport { calcTotalPrice } from '../utils.js'\r\nimport './cart-block.css'\r\n\r\nexport const CartBlock = () => {\r\n  const [isCartMenuVisible, setCartMenuVisible] = useState(false)\r\n  const items = useSelector(state => state.cart.itemsInCart);\r\n  const totalPrice = calcTotalPrice(items);\r\n  return (\r\n    <div className='header-cart-wrapper'>\r\n        <ItemsInCart quantity={ items.length } />\r\n        <AiOutlineShoppingCart className='header-cart' onClick= { () => setCartMenuVisible(!isCartMenuVisible) } />\r\n        { totalPrice > 0 ? <span className='total_price'> { totalPrice } $</span> :null }\r\n        { isCartMenuVisible && <CartMenu items={ items }/> }\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}